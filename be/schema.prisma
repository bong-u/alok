datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  isDeleted Boolean  @default(false) @map("is_deleted")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  records   Record[]
  attendees Attendee[]
}

model Date {
  id   Int    @id @default(autoincrement())
  date String @unique

  records       Record[]
  dateAttendees DateAttendee[]
}

model Record {
  id         Int    @id @default(autoincrement())
  dateId     Int    @map("date_id")
  recordType String @map("record_type")
  amount     Float
  userId     Int    @map("user_id")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  date Date @relation(fields: [dateId], references: [id], onDelete: Cascade)

  @@unique([dateId, recordType, userId])
}

model Attendee {
  id            Int    @id @default(autoincrement())
  partnerUserId Int    @map("user_id")
  name          String @unique

  user User @relation(fields: [partnerUserId], references: [id], onDelete: Cascade)

  dateAttendees DateAttendee[]
}

model DateAttendee {
  dateId     Int @map("date_id")
  attendeeId Int @map("attendee_id")

  date     Date     @relation(fields: [dateId], references: [id], onDelete: Cascade)
  attendee Attendee @relation(fields: [attendeeId], references: [id], onDelete: Cascade)

  @@id([dateId, attendeeId])
}
